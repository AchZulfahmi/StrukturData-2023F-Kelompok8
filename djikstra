class Peta:
    def __init__(self):
        self.cityList = {}

    def printPeta(self):
        for kota in self.cityList:
            print(kota + ":", self.cityList[kota])

    def tambahkanKota(self, kota):
        if kota not in self.cityList:
            self.cityList[kota] = {}
            return True
        return False
    
    def hapusKota(self, kotaDihapus):
        if kotaDihapus in self.cityList:
            del self.cityList[kotaDihapus]
            for kotalain in self.cityList:
                if kotaDihapus in self.cityList[kotalain]:
                    del self.cityList[kotalain][kotaDihapus]
            return True
        return False

    def tambahkanJalan(self, kota1, kota2, jarak):
        if kota1 in self.cityList and kota2 in self.cityList:
            self.cityList[kota1][kota2] = (jarak, 'KM')
            self.cityList[kota2][kota1] = (jarak, 'KM')
            return True
        return False

    def djikstra(self, source):
        jarak = {kota: float('inf') for kota in self.cityList}
        jarak[source] = 0

        unvisitedCities = list(self.cityList.keys())
        while unvisitedCities:
            minJarak = float('inf')
            dekatKota = None

            for kota in unvisitedCities:
                if jarak[kota] < minJarak:
                    minJarak = jarak[kota]
                    dekatKota = kota
            unvisitedCities.remove(dekatKota)

            for neighbor, weight in self.cityList[dekatKota].items():
                jarakNeighbor = jarak[dekatKota] + weight[0]
                if jarakNeighbor < jarak[neighbor]:
                    jarak[neighbor] = jarakNeighbor

        return jarak

peta_jawa_tengah = Peta()
kota_list_jawa_tengah = ["Semarang",
                          "Yogyakarta",
                          "Surakarta",
                          "Salatiga",
                          "Pekalongan",
                          "Tegal",
                          "Magelang",
                          "Purwokerto",
                          "Purbalingga",
                          "Wonosobo",
                          "Kebumen",
                          "Cilacap",
                          "Banyumas",
                          "Banjarnegara",
                          "Pemalang"]

print ('========================================================================================')

for kota in kota_list_jawa_tengah:
    peta_jawa_tengah.tambahkanKota(kota)

edges_jawa_tengah = [("Semarang", "Yogyakarta", 121),
                     ("Semarang", "Salatiga", 47),
